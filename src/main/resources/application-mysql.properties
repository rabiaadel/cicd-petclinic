# database init, supports mysql too
database=mysql
# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always
# MySQL Datasource (env var fallbacks for Docker)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/petclinic?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:petclinic}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:petclinic}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate for MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# HikariCP Pooling (tuned for MySQL efficiency)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.auto-commit=true

# Flyway for MySQL
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true