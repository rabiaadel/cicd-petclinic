version: '3.8'

services:
  spring-petclinic:
    image: spring-petclinic-app1
    build:
      context: .
      dockerfile: Dockerfile.mine

    ports:
      - "8090:8090"
    depends_on:
       mysql:
          condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=mysql
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/petclinic?useTimezone=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=petclinic
      - SPRING_DATASOURCE_PASSWORD=petclinic
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
    networks:
      - petclinic-network

  mysql:
    image: mysql:9.2
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=petclinic
      - MYSQL_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    volumes:
      - "./conf.d:/etc/mysql/conf.d:ro"
      - mysql_data:/var/lib/mysql
    networks:
      - petclinic-network
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 20s
        retries: 10

  postgres:
    image: postgres:17.5
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_USER=sonarqube
      - POSTGRES_DB=sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - petclinic-network
  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - petclinic-network
    depends_on:
      - postgres
  nexus:
    image: sonatype/nexus3:latest
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - petclinic-network
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - peometheus-data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - petclinic-network
    depends_on:
      - spring-petclinic
  grafana:
    image: grafana/grafana:latest 
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:  
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    networks:
      - petclinic-network
    depends_on: 
      - prometheus
volumes:
  sonarqube_data:
  sonarqube_extensions:
  postgres_data:
  nexus-data:
  grafana-storage:
  peometheus-data:
  mysql_data:
  sonarqube_logs:
networks:
  petclinic-network:
    driver: bridge

